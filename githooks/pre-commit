#!/usr/bin/perl
# Copyright (c) 2018 Australian Rivers Institute. Author: Lindsay Bradford

use strict;
use warnings;

use File::Basename qw(dirname);
use Cwd  qw(abs_path);
use lib dirname(dirname abs_path $0) . '/githooks';

use shared;

use constant checkPrefix => "git pre-commit check:";

doChecks();

sub doChecks {
	my $failureCount=0;

	$failureCount += checkStagedGoFileFormatting();
	$failureCount += checkGoTestPasses();

	shared::reportStatusAndExit($failureCount, checkPrefix);
}

sub checkStagedGoFileFormatting {
	my @allStagedFiles = `git diff --staged --name-only`;
	my @stagedGoFiles = grep(/\.go$/, @allStagedFiles);

	my $unformattedFileNumber = 0;
	foreach my $file (@stagedGoFiles) {
		my $unformattedFile = `gofmt -l $file`;
		if ($unformattedFile ne "") {
			print checkPrefix, " file needs gofmt: $unformattedFile\n";
			$unformattedFileNumber += 1;
		}
	}

	if ($unformattedFileNumber ge 1) {
		return shared::FAILURE;
	}

	return shared::SUCCESS;
}

sub checkGoTestPasses {
	my @goTestResults = `go test ./...`;
	my @failedTests = grep(/FAIL:/, @goTestResults);

	foreach my $failedTest (@failedTests) {
		my @failureDetail = split(/\s/, $failedTest);
		my $failedFileName = $failureDetail[2];
		print checkPrefix, " file with failing test(s): $failedFileName\n";
	}
	
	my $failedTestNumber = @failedTests;
	if ($failedTestNumber ge 1) {
		return shared::FAILURE;
	}
	
	return shared::SUCCESS;
}
