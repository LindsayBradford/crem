#!/bin/python

import subprocess
import sharedhook


checkPrefix = 'git post-commit:'


def main():
    print('Doing git post-commit functionality:') 
    doPostProcessing()


def doPostProcessing():
    failureCount = 0
    failureCount += buildExplorer()
    failureCount += buildEngine()
    sharedhook.reportStatusAndExit(failureCount, checkPrefix)


def buildExplorer():
    return buildExecutable('cremexplorer')


def buildEngine():
    return buildExecutable('cremengine')


def buildExecutable(executableName):
    baseDir = f'cmd/{executableName}'
    sourceFile = f'{baseDir}/main.go'
    deployFile = f'{baseDir}/{executableName}.exe'

    commandArray = ['go', 'build', '-o', deployFile, sourceFile]
    output = subprocess.run(commandArray, capture_output=True, text=True)

    command = ' '.join(commandArray)
    exitStatus = deriveExitStatus(output.returncode)
    
    print (f'  {command}: {exitStatus.name}')

    return exitStatus.value
    

def deriveExitStatus(returnCode):
    if returnCode == 0:
        return sharedhook.ExitStatus.SUCCESS
    return sharedhook.ExitStatus.FAILURE


if __name__ == '__main__':
    main()
